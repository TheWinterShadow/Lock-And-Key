[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lock-and-key"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
authors = [
  { name = "WinterShadow", email = "wolf@cyberwolf.dev" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
[tool.hatch.envs.lockAndKey]
dependencies = [
"mypy_boto3_iam",
"boto3",
"boto3-stubs",
"pydantic"
]

[project.urls]
Documentation = "https://github.com/WinterShadow/lock-and-key#readme"
Issues = "https://github.com/WinterShadow/lock-and-key/issues"
Source = "https://github.com/WinterShadow/lock-and-key"

[tool.hatch.version]
path = "src/lock_and_key/__about__.py"

[tool.hatch.envs.default.scripts]
# A script to perform checks, run tests, and release the package
release = [
  "hatch run lint:check",
  "hatch run test",
  "hatch release",
]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/lock_and_key}"

[tool.coverage.run]
source_pkgs = ["lock_and_key", "tests"]
branch = true
parallel = true
omit = [
  "src/lock_and_key/__about__.py",
]

[tool.coverage.paths]
lock_and_key = ["src/lock_and_key", "*/lock-and-key/src/lock_and_key"]
tests = ["tests", "*/lock-and-key/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.hatch.envs.lint]
dependencies = [
  "black",
  "isort",
  "mypy",
]
[tool.hatch.envs.lint.scripts]
# A script to check for formatting and type errors
check = [
  "black --check --diff .",
  "isort --check-only --diff .",
  "mypy .",
]
# A script to automatically fix formatting issues
fix = [
  "isort .",
  "black .",
  "check",
]

# Black configuration to exclude the .env folder
[tool.black]
exclude = '/\.env/'

# isort configuration to exclude the .env folder
[tool.isort]
profile = "black"
skip_glob = ["**/.*", "**/__pycache__/**"]
extend_skip_glob = [".env/*"]

# Mypy configuration to exclude the .env folder
[tool.mypy]
exclude = ['\.env']
mypy_path = "src"

[tool.hatch.envs.test]
dependencies = [
  "pytest",
]
[tool.hatch.envs.test.scripts]
run = "pytest {args}"